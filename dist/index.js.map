{"mappings":"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","sources":["src/index.js","src/card.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-531e6d78916bb52d.js"],"sourcesContent":["import {RecipeCard} from \"./card\";\r\n\r\ncustomElements.define(\"recipe-card\", RecipeCard);","import css from \"bundle-text:./card.css\";\r\n\r\nexport class RecipeCard extends HTMLElement {\r\n\r\n    // private properties\r\n    _config;\r\n    _hass;\r\n    _elements = {};\r\n    _parsedRecipes;\r\n    _recipeIndex;\r\n\r\n    // lifecycle\r\n    constructor() {\r\n        super();\r\n        this.yamlEntryToLi = this.yamlEntryToLi.bind(this);\r\n    }\r\n\r\n    setConfig(config) {\r\n        this._config = config;\r\n        this.doCard();\r\n        this.doStyle();\r\n        this.doAttach();\r\n        this.doQueryElements();\r\n        this.doCheckConfig();\r\n        this.doFetchRecipes();\r\n    }\r\n\r\n    set hass(hass) {\r\n        this._hass = hass;\r\n    }\r\n\r\n    // jobs\r\n    doCheckConfig() {\r\n        if (!this._config.url) {\r\n            throw new Error(\"Please define a url in config!\");\r\n        }\r\n    }\r\n\r\n    async doFetchRecipes() {\r\n        try {\r\n            const response = await fetch(this._config.url);\r\n            const yamlText = await response.text();\r\n\r\n            this._parsedRecipes = window.jsyaml.load(yamlText);\r\n            // this._recipeIndex = Math.floor(Math.random() * this._parsedRecipes.length);\r\n            this._recipeIndex = 121;\r\n            this.doFillCard();\r\n        } catch (error) {\r\n            throw new Error(`Error fetching or parsing the recipe file: ${error}`);\r\n        }\r\n    }\r\n\r\n    doCard() {\r\n        this._elements.card = document.createElement(\"ha-card\");\r\n        this._elements.card.innerHTML = `\r\n            <div class=\"selectdiv\"></div>\r\n            <div class=\"content\"></div>\r\n        `;\r\n    }\r\n\r\n    doStyle() {\r\n        this._elements.style = document.createElement(\"style\");\r\n        this._elements.style.textContent = css;\r\n    }\r\n\r\n    doAttach() {\r\n        this.attachShadow({mode: \"open\"});\r\n        this.shadowRoot.append(this._elements.style, this._elements.card);\r\n    }\r\n\r\n    doQueryElements() {\r\n        const card = this._elements.card;\r\n        this._elements.selectdiv = card.querySelector(\".selectdiv\");\r\n        this._elements.content = card.querySelector(\".content\");\r\n    }\r\n\r\n\r\n    doFillSelect() {\r\n        let groupedRecipes = this._parsedRecipes.reduce((grouped, recipe, index) => {\r\n            const category = recipe.category || \"Onbekend\";\r\n            if (!grouped[category]) {\r\n                grouped[category] = [];\r\n            }\r\n            grouped[category].push({...recipe, index});\r\n            return grouped;\r\n        }, {});\r\n\r\n        const categoryOptions = Object.keys(groupedRecipes).map(category => {\r\n            // TODO let value be the index (key) in this._parsedRecipes instead of name\r\n            const options = groupedRecipes[category].map(recipe => {\r\n                return `<option value=\"${recipe.index}\">${recipe.name}</option>`;\r\n            }).join(\"\");\r\n            return `<optgroup label=\"${category}\">${options}</optgroup>`;\r\n        }).join(\"\");\r\n\r\n        this._elements.selectdiv.innerHTML = `\r\n            <select id=\"recipe-selector\">\r\n                <option value=\"\">Select a recipe...</option>\r\n                ${categoryOptions}\r\n            </select>\r\n        `;\r\n\r\n        this._elements.selectdiv.querySelector(\"#recipe-selector\").addEventListener(\"change\", (event) => {\r\n            this._recipeIndex = event.target.value\r\n            if (this._recipeIndex !== -1) {\r\n                this.doFillContent();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    doFillContent() {\r\n        this.recipe = this._parsedRecipes[this._recipeIndex];\r\n        if (!this.recipe) {\r\n            this._elements.content.innerHTML = \"Loading recipe...\";\r\n            return;\r\n        }\r\n\r\n        this._elements.content.innerHTML = `\r\n            <div class=\"recipe-title\">${this.recipe.name}</div>\r\n            <div class=\"recipe-content\">\r\n                <i>IngrediÃ«nten${this.recipe?.persons ? ` (${this.recipe.persons} personen)` : \"\"}:</i>\r\n                <ul class=\"ingredient-list\">\r\n                    ${this.recipe.ingredients.map(this.yamlEntryToLi).join(\"\")}\r\n                </ul>\r\n                <br/> \r\n                <i>Bereiding:</i>\r\n                <ol class=\"instruction-list\">\r\n                    ${this.recipe.instructions.map(this.yamlEntryToLi).join(\"\")}\r\n                </ol>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    doFillCard() {\r\n        this.doFillSelect();\r\n        this.doFillContent();\r\n    }\r\n\r\n    // helpers\r\n    yamlEntryToLi(yamlEntry) {\r\n        if (Array.isArray(yamlEntry)) {\r\n            return \"<ul>\" + yamlEntry.map(val => this.yamlEntryToLi(val)).join(\"\") + \"</ul>\";\r\n        } else if (typeof yamlEntry === \"object\") {\r\n            let [key, value] = Object.entries(yamlEntry)[0];\r\n            key = key.charAt(0).toUpperCase() + key.slice(1);\r\n            if (value) {\r\n                if (Array.isArray(value)) {\r\n                    value = \"<ul>\" + value.map(val => this.yamlEntryToLi(val)).join(\"\") + \"</ul>\";\r\n                }\r\n                value = \": \" + value;\r\n            } else {\r\n                value = \"\";\r\n            }\r\n            return `<li><span class=\"ingredient\">${key}</span><span class=\"amount\">${value}</span></li>`;\r\n        } else {\r\n            yamlEntry = yamlEntry.charAt(0).toUpperCase() + yamlEntry.slice(1);\r\n            return `<li>${yamlEntry}</li>`;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"55c74441f404300e\";"],"names":[],"version":3,"file":"index.js.map"}